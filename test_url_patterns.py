#!/usr/bin/env python
"""
Test script to check actual URL patterns generated by Django
"""
import os
import sys
import django

# Add the project directory to Python path
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

# Set up Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mariahavens_pos_backend.settings')
django.setup()

from django.urls import reverse
from django.core.management import execute_from_command_line
from django.conf.urls import handler404
from django.urls import get_resolver

def test_url_patterns():
    """Test the actual URL patterns"""
    print("=== Django URL Patterns Analysis ===\n")
    
    # Get the URL resolver
    resolver = get_resolver()
    
    # Print some common API patterns
    api_patterns = []
    
    def collect_patterns(patterns, prefix=''):
        for pattern in patterns:
            if hasattr(pattern, 'pattern'):
                path = prefix + str(pattern.pattern)
                if 'api/' in path and any(keyword in path for keyword in ['menu', 'inventory', 'guests', 'dashboard', 'users']):
                    api_patterns.append(path)
            if hasattr(pattern, 'url_patterns'):
                collect_patterns(pattern.url_patterns, prefix + str(pattern.pattern))
    
    collect_patterns(resolver.url_patterns)
    
    print("Found API patterns:")
    for pattern in sorted(api_patterns):
        print(f"  {pattern}")
    
    print("\n=== Testing specific endpoints ===")
    
    # Test specific endpoints we know should exist
    test_endpoints = [
        # Menu endpoints
        ('menu-list-create', 'menu:menuitem-list-create'),
        # Inventory endpoints  
        ('inventory-list', 'inventory:inventoryitem-list'),
        # Guest endpoints
        ('guests-list', 'guests:guests-list'),
        # Dashboard endpoints
        ('dashboard-stats', 'dashboard:stats'),
        # User endpoints
        ('user-list', 'users:user-list'),
    ]
    
    for desc, url_name in test_endpoints:
        try:
            url = reverse(url_name)
            print(f"✅ {desc}: {url}")
        except Exception as e:
            print(f"❌ {desc}: ERROR - {e}")
    
    print("\n=== Manual URL testing ===")
    
    # Test some URLs manually to see what works
    import requests
    base_url = "http://localhost:8000/api"
    
    test_urls = [
        "/menu/",
        "/inventory/",  
        "/inventory/items/",
        "/guests/", 
        "/guests/guests/",
        "/dashboard/stats/",
        "/dashboard/dashboard/stats/",
        "/users/"
    ]
    
    print(f"Testing against {base_url}:")
    for test_url in test_urls:
        try:
            response = requests.get(f"{base_url}{test_url}", timeout=5)
            print(f"  {test_url} -> {response.status_code}")
        except Exception as e:
            print(f"  {test_url} -> ERROR: {e}")

if __name__ == '__main__':
    test_url_patterns()