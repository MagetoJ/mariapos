# Generated by Django 5.0.2 on 2025-09-30 14:01

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(max_length=17)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('payment_terms', models.CharField(blank=True, help_text='e.g., Net 30, Cash on delivery', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'db_table': 'suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.inventorycategory')),
            ],
            options={
                'verbose_name': 'Inventory Category',
                'verbose_name_plural': 'Inventory Categories',
                'db_table': 'inventory_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('current_stock', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('unit', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('l', 'Liters'), ('ml', 'Milliliters'), ('pcs', 'Pieces'), ('bottles', 'Bottles'), ('cans', 'Cans'), ('boxes', 'Boxes'), ('packets', 'Packets')], max_length=10)),
                ('min_stock_level', models.DecimalField(decimal_places=3, max_digits=10)),
                ('max_stock_level', models.DecimalField(decimal_places=3, max_digits=10)),
                ('reorder_point', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('average_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('storage_location', models.CharField(blank=True, help_text='e.g., Freezer A, Pantry Shelf 3', max_length=100)),
                ('tracks_expiry', models.BooleanField(default=False)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, help_text='Shelf life in days', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_counted_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycategory')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.supplier')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'db_table': 'inventory_items',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('po_number', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent to Supplier'), ('confirmed', 'Confirmed'), ('partial', 'Partially Received'), ('received', 'Fully Received'), ('cancelled', 'Cancelled')], default='draft', max_length=15)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_purchase_orders', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'db_table': 'purchase_orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('movement_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('waste', 'Waste/Spoilage'), ('transfer', 'Transfer'), ('adjustment', 'Stock Adjustment'), ('count', 'Stock Count'), ('return', 'Return to Supplier')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('previous_stock', models.DecimalField(decimal_places=3, max_digits=10)),
                ('new_stock', models.DecimalField(decimal_places=3, max_digits=10)),
                ('reference_number', models.CharField(blank=True, help_text='Purchase order, waste ticket, etc.', max_length=100)),
                ('reason', models.TextField(blank=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'db_table': 'stock_movements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WasteLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('reason', models.CharField(choices=[('expired', 'Expired'), ('spoiled', 'Spoiled'), ('damaged', 'Damaged'), ('contaminated', 'Contaminated'), ('overproduction', 'Overproduction'), ('mistake', 'Staff Mistake'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waste_logs', to='inventory.inventoryitem')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_waste', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Waste Log',
                'verbose_name_plural': 'Waste Logs',
                'db_table': 'waste_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity_ordered', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_received', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventoryitem')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
                'db_table': 'purchase_order_items',
                'unique_together': {('purchase_order', 'item')},
            },
        ),
    ]
