# Generated by Django 5.0.2 on 2025-09-30 14:01

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('guests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceRequestTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('housekeeping', 'Housekeeping'), ('maintenance', 'Maintenance'), ('room_service', 'Room Service'), ('concierge', 'Concierge'), ('transport', 'Transportation'), ('laundry', 'Laundry'), ('spa', 'Spa & Wellness'), ('dining', 'Dining Reservation'), ('complaint', 'Complaint'), ('lost_found', 'Lost & Found'), ('other', 'Other')], max_length=20)),
                ('department', models.CharField(max_length=20)),
                ('title_template', models.CharField(max_length=200)),
                ('description_template', models.TextField()),
                ('default_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('estimated_duration_minutes', models.PositiveIntegerField(default=30)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_guest_selectable', models.BooleanField(default=True, help_text='Can guests select this template?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Request Template',
                'verbose_name_plural': 'Service Request Templates',
                'db_table': 'service_request_templates',
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('department', models.CharField(blank=True, max_length=20)),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('completed_requests', models.PositiveIntegerField(default=0)),
                ('cancelled_requests', models.PositiveIntegerField(default=0)),
                ('overdue_requests', models.PositiveIntegerField(default=0)),
                ('avg_response_time', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('avg_resolution_time', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('avg_satisfaction', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('total_satisfaction_responses', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Metrics',
                'verbose_name_plural': 'Service Metrics',
                'db_table': 'service_metrics',
                'ordering': ['-date'],
                'unique_together': {('date', 'department')},
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_number', models.CharField(max_length=20, unique=True)),
                ('type', models.CharField(choices=[('housekeeping', 'Housekeeping'), ('maintenance', 'Maintenance'), ('room_service', 'Room Service'), ('concierge', 'Concierge'), ('transport', 'Transportation'), ('laundry', 'Laundry'), ('spa', 'Spa & Wellness'), ('dining', 'Dining Reservation'), ('complaint', 'Complaint'), ('lost_found', 'Lost & Found'), ('other', 'Other')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('room_number', models.CharField(max_length=10)),
                ('department', models.CharField(blank=True, choices=[('housekeeping', 'Housekeeping'), ('maintenance', 'Maintenance'), ('food_beverage', 'Food & Beverage'), ('front_desk', 'Front Desk'), ('concierge', 'Concierge'), ('security', 'Security'), ('management', 'Management')], max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('guest_notified', models.BooleanField(default=False)),
                ('guest_phone', models.CharField(blank=True, max_length=17)),
                ('resolution_notes', models.TextField(blank=True)),
                ('guest_satisfaction', models.PositiveIntegerField(blank=True, choices=[(1, '1 stars'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')], help_text='Guest satisfaction rating (1-5 stars)', null=True)),
                ('requires_followup', models.BooleanField(default=False)),
                ('followup_date', models.DateTimeField(blank=True, null=True)),
                ('followup_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_service_requests', to=settings.AUTH_USER_MODEL)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='guests.guest')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'db_table': 'service_requests',
                'ordering': ['-priority', '-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequestUpdate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('update_type', models.CharField(choices=[('status_change', 'Status Change'), ('assignment', 'Assignment Change'), ('guest_communication', 'Guest Communication'), ('internal_note', 'Internal Note'), ('cost_update', 'Cost Update')], max_length=20)),
                ('message', models.TextField()),
                ('communicated_to_guest', models.BooleanField(default=False)),
                ('guest_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_request_updates', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='service_requests.servicerequest')),
            ],
            options={
                'verbose_name': 'Service Request Update',
                'verbose_name_plural': 'Service Request Updates',
                'db_table': 'service_request_updates',
                'ordering': ['-created_at'],
            },
        ),
    ]
